name: Master CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [10.x, 12.x, 13.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: nodejs project information
        id: projectinfo
        uses: gregoranders/nodejs-project-info@v0.0.6
      - name: npm install
        run: |
          npm install
        env:
          CI: true
      - name: code coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./test/coverage/lcov.info
        env:
          CI: true
      # - name: publish code coverage to code climate
      #   if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x'
      #   uses: paambaati/codeclimate-action@v2.3.0
      #   env:
      #     CI: true
      #     CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE }}
      #   with:
      #     coverageCommand: npm run test
      #     coverageLocations: |
      #       ./test/coverage/lcov.info:lcov
      #     debug: true
      # - name: create release
      #   if: matrix.os == 'ubuntu-latest' && matrix.node-version == '14.x'
      #   id: createrelease
      #   uses: gregoranders/nodejs-create-release@v0.0.6
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     PACKAGE_JSON: ${{ steps.projectinfo.outputs.context }}
      #   with:
      #     tag: v${{ steps.projectinfo.outputs.version }}
      #     name: ${{ steps.projectinfo.outputs.version }} Release
      #     body: ${{ steps.projectinfo.outputs.name }} - ${{ steps.projectinfo.outputs.version }} Release
      #     target: ${{ github.ref }}
      #     draft: true
